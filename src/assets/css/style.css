@font-face {
    font-family: 'Source Code';
    src: url('../fonts/source_code_variable.woff2') format('woff2-variations');
    font-weight: 200 900;
    font-style: normal;
}

@font-face {
    font-family: 'Roboto Flex';
    src: url('../fonts/roboto-flex.woff2') format('woff2-variations');
    font-weight: 100 1000;
    font-stretch: 25% 151%;
}

*,
*::after,
*::before {
    box-sizing: border-box;
}

:root {
    --color-alt: #34A5DA;
    --color-primary: #84A516;
    --color-accent-text: #9E9581;
    --color-accent: #E6E4DD;
    --color-white: #EFEFEF;
    --color-black: #111;
    --color-text: var(--color-black);

    --color: var(--color-text);
    --bg-color: var(--color-accent);

    --font-family: 'Roboto Flex';
    --font-family-code: 'Source Code';
    --font-size: 3rem;
    --font-weight-bold: 700;
    --distance: 1em;
}

@media (max-width: 62.5em) {
    :root {
        --aside-width: 80rem;
    }
}

html {
    font-size: 62.5%;
    font-size: calc(50% + .104vw);
    color: var(--color-text);
    background-color: var(--bg-color);
}

body {
    font-family: var(--font-family);
    font-size: var(--font-size);
    font-weight: 400;
    line-height: 1.6;
    background-color: var(--color-white);
}

a {
    text-decoration: none;
    color: inherit;
    cursor: pointer;
}

strong {
    font-weight: var(--font-weight-bold);
}

p,
pre,
blockquote,
table,
ol,
ul,
form {
    margin-bottom: 1em;
}

pre {
    font-size: .8em;
}

q {
    quotes: '«' '»' '‹' '›';
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin: .8em 0 .2em;
    line-height: 1.2;
    font-weight: var(--font-weight-bold);
    color: var(--color-primary);
}

h1,
h2,
h3,
h4,
h5,
h6 {
    margin-top: 2rem;
    font-size: 1.8em;
    font-weight: 700;
    text-transform: uppercase;
    color: var(--color-primary);
    letter-spacing: .002em;
    font-stretch: 50%;
}

h2 {
    font-size: 1.6em;
}

h3 {
    font-size: 1.4em;
}

h3 {
    font-size: 1.2em;
}

h4 {
    font-size: 1em;
}

h5 {
    font-size: 1em;
    font-weight: 600;
}

h6 {
    font-size: 1em;
    font-weight: 400;
}

input:focus,
textarea:focus,
select:focus {
    outline: 1px solid black;
    outline-offset: -1px;
    transition: outline 0.4s;
}

img {
    vertical-align: middle;
    height: auto;
    max-width: 100%;
}

figure {
}

figcaption {
}

table {
    font-size: var(--font-size);
}

td:not(:last-child),
th:not(:last-child) {
    padding-right: 1em;
}

th {
    font-weight: var(--font-weight-bold);
}

address {
    font-style: normal;
}

/*
 * Main layout.
 */
body > header,
body > main,
body > footer {
    padding: 2rem 6rem;
}

body {
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 100vh;
    background-color: var(--color-accent);
}

body.done::after {
    content: '';
    display: block;
    position: absolute;
    top: 50%;
    right: 2rem;
    width: 8rem;
    height: 8rem;
    border-radius: 50%;
    background-color: var(--color-primary);
    opacity: 0;
    transform: translate(calc(100% + 8rem), -50%) scale(0);
    animation: bodyDot .3s ease-in-out both;
}

@keyframes bodyDot {
    to {
        opacity: 1;
        transform: translate(0, -50%) scale(1);
    }
}

body > header,
body > footer {
    flex: 0 0 auto;
}

body > footer {
    padding-top: 0;
}

body > main {
    flex: 1 0 auto;
}

body > header {
    margin-bottom: 0;
    padding-bottom: 0;
    font-size: 1.2rem;
    animation: headerIn .3s .3s ease-in both;
    transform-origin: 0 0;
}

body > header > p {
    margin-bottom: .4rem;
    font-size: 1.4em;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: .03em;
    color: var(--color-accent-text);
}

body > header > p::after {
    content: '';
    display: block;
    border-bottom: 2px solid var(--color-accent-text);
}

body > header h1 {
    margin-top: 0;
}

body > header > :last-child {
    margin-bottom: 3rem;
}

body.slide-layout-title > header {
    margin-top: auto;
    font-size: 1.2em;
}

body.slide-layout-title > main,
body.slide-layout-section-title > main {
    flex: 0 0 auto;
}

body.slide-layout-section-title > header {
    margin-top: auto;
    margin-bottom: auto;
    padding-top: 5rem;
    font-size: 1.4em;
}

body.slide-layout-image {
    height: 100vh;
    min-height: 0;
}

body.slide-layout-image > main {
    display: flex;
    flex: 0 1 100%;
    flex-direction: column;
    min-height: 0;
}

body.slide-layout-image > main > p {
    flex: 1 1 auto;
    height: 100%;
}

body.slide-layout-image > main img {
    width: 100%;
    height: 100%;
    object-fit: contain;
}

body > footer {
    margin-top: 0;
    font-size: 2rem;
}

body > footer > nav.fade-in {
    animation-name: footerIn;
    animation-delay: .8s;
}

@keyframes footerIn {
    from {
        opacity: 0;
        transform: translateY(1rem);
    }

    to {
        opacity: 1;
        transform: translateY(0);
    }
}

body > main > p > code,
body > main > ul code {
    font-size: .7em;
    padding: .1em .4em;
    box-shadow: inset 0 0 6px var(--color-accent-text);
}

body > main > ul {
    color: var(--color-accent-text);
    font-weight: 500;
}

body > main ol {
    counter-reset: counter;
}

body > main > :where(ul, ol) {
    display: table;
}

body > main > :where(ul, ol) :where(ul, ol) {
    margin-bottom: 0;
}

body > main > :where(ul, ol) li {
    display: table-row;
}

body > main > :where(ul, ol) li:before {
    content: '';
    display: table-cell;
    vertical-align: baseline;
    padding-right: 1rem;
    color: var(--color-primary);
}

body > main > ul > li {
    margin-bottom: .2em;
    padding-left: 1.2em;
    line-height: 1.4;
}

body > main ul > li::before {
    content: '▶';
    margin-top: .1em;
}

body > main ol {
    counter-reset: counter;
}

body > main ol > li::before {
    counter-increment: counter;
    content: counters(counter, '.', decimal);
    font-weight: var(--font-weight-bold);
    font-size: 1.2em;
}

body > main a,
body > main a:visited {
    text-decoration: none;
    color: var(--color-alt);
}

body > main a:hover {
    text-decoration: underline;
}

/*
 * Footer styling
 */
body > footer > nav > ul {
    display: flex;
    align-items: center;
    margin-bottom: 0;
}

body > footer > nav li {
    position: relative;
}

body > footer > nav li + li {
    margin-left: 2rem;
}

body > footer > nav a:not([aria-current]) {
    position: relative;
    display: block;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    white-space: nowrap;
    text-indent: -999em;
    background-color: var(--color-primary);
}

body > footer > nav a:not([aria-current])::after {
    content: attr(title);
    position: absolute;
    bottom: 100%;
    left: 0;
    margin-bottom: .4em;
    padding: .2em .6em;
    font-size: .6em;
    border-radius: 1em;
    color: var(--color-accent);
    background-color: var(--color-primary);
    text-indent: 0;
    opacity: 0;
    transform: translateX(2em);
    transition: all .2s;
}

body > footer > nav a:not([aria-current]):hover::after {
    opacity: 1;
    transform: translateX(0);
}

body > footer > nav a[aria-current] {
    font-weight: 200;
    font-style: italic;
    color: var(--color-accent-text);
}

body > footer > ul {
    position: absolute;
    left: -9999em;
    display: grid;
    grid-template-columns: repeat(3, minmax(10px, 1fr));
}

body > footer > ul li:nth-child(1) {
    margin-right: auto;
}

body > footer > ul li:nth-child(2) {
    margin-right: auto;
    margin-left: auto;
}

body > footer > ul li:nth-child(3) {
    margin-left: auto;
}

.toc {
    margin: 2rem 0;
    padding: 1rem;
    border: 4px solid var(--color-accent);
}

.toc ol {
    list-style-position: inside;
    margin-bottom: 0;
}

pre {
    overflow: auto;
}

code[class*="language-"],
pre[class*="language-"] {
    font-size: .7em;
    line-height: 1.1;
}

.fade-in {
    animation-name: fadeIn;
    animation-duration: .3s;
    animation-timing-function: ease-in;
    animation-play-state: paused;
    animation-fill-mode: both;
}

.fade-in.active {
    animation-play-state: running;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateX(1rem);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes headerIn {
    from {
        opacity: 0;
        transform: scale(1.2);
    }
    to {
        opacity: 1;
        transform: scale(1);
    }
}
